<Project>
    <PropertyGroup>
        <NuspecFile>$(MSBuildThisFileDirectory)eng\nuspec\$(PackageId).nuspec</NuspecFile>
		<NuGetIntermediatePath>$(BaseIntermediateOutputPath).nusrc\</NuGetIntermediatePath>
    </PropertyGroup>

    <PropertyGroup Condition="'$(IsPackable)' == 'true'">
        <DefaultItemExcludes>$(DefaultItemExcludes);.nusrc\**</DefaultItemExcludes>
        <CleanDependsOn>$(CleanDependsOn);CleanNuGet</CleanDependsOn>
    </PropertyGroup>

	<PropertyGroup>
		<DefineConstants Condition="'$(TargetFramework)' == '$(NetStandardMoniker)' or $(TargetFramework) == '$(NetFrameworkMoniker)'">$(DefineConstants);NET20_BASE</DefineConstants>
		<DefineConstants Condition="'$(TargetFramework)' != '$(NetStandardMoniker)' and $(TargetFramework) != '$(NetFrameworkMoniker)'">$(DefineConstants);NET21_BASE</DefineConstants>
	</PropertyGroup>

    <ItemGroup Condition="'$(IsPackable)' == 'true'">
        <None Include=".nusrc\**" />
        <NuGetSource Include=".nusrc\**" />
    </ItemGroup>

    <ItemGroup Condition="'$(IsPackable)' == 'true'">
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All"/>
    </ItemGroup>

    <ItemGroup Condition="'$(UseCodeAnalysis)' == 'true'">
        <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="8.0.0" PrivateAssets="all" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Nerdbank.GitVersioning" Version="3.6.143" PrivateAssets="all" />
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3" PrivateAssets="all" />
    </ItemGroup>

	<Target Name="AddNuGetPackageVersionToThisAssembly"
			DependsOnTargets="GetBuildVersion"
			BeforeTargets="GenerateAssemblyNBGVVersionInfo">
		<ItemGroup>
			<AdditionalThisAssemblyFields Include="NuGetPackageVersion" String="$(NuGetPackageVersion)" />
			<AssemblyMetadata Include="NuGetPackageVersion" Value="$(NuGetPackageVersion)" />
		</ItemGroup>
	</Target>

    <Target Name="CleanNuGet">
        <RemoveDir Directories="$(NuGetIntermediatePath)" Condition="Exists($(NuGetIntermediatePath))" />
    </Target>

    <Target Name="PrepareNuGet" BeforeTargets="GenerateNuspec" DependsOnTargets="CleanNuGet" Condition="'$(IsPackable)' == 'true'">
        <Copy SourceFiles="@(NuGetSource)" DestinationFolder="$(NuGetIntermediatePath)%(RecursiveDir)" />
        <Copy SourceFiles="$(MSBuildThisFileDirectory)gfx\icon.png" DestinationFolder="$(NuGetIntermediatePath)" />
        
        <PropertyGroup>
            <NuspecProperties>
				PackageId=$(PackageId);
				PackageVersion=$(PackageVersion);
				PackageOwners=$(PackageOwners);
				PackageAuthors=$(PackageAuthors);
				PackageProjectUrl=$(PackageProjectUrl);
				PackageIconUrl=$(PackageIconUrl);
				PackageLicense=$(PackageLicense);
				PackageCopyright=$(Copyright);
				PackageTags=$(PackageTags);
				TargetFramework=$(TargetFramework);
				NetStandardMoniker=$(NetStandardMoniker);
				NetFrameworkMoniker=$(NetFrameworkMoniker);
				NetMoniker=$(NetMoniker);
				AssemblyName=$(AssemblyName);
				BinPath=$(MSBuildProjectDirectory)\$(OutputPath);
				SqlServerPackageId=$(SqlServerPackageId);
				SqlServerPackageVersion=$(SqlServerPackageVersion);
				SqlitePackageId=$(SqlitePackageId);
				SqlitePackageVersion=$(SqlitePackageVersion);
				OraclePackageId=$(OraclePackageId);
				OraclePackageVersion=$(OraclePackageVersion);
				OraclePackageVersion_net20=$(OraclePackageVersion_net20);
				MySqlPackageId=$(MySqlPackageId);
				MySqlPackageVersion=$(MySqlPackageVersion);
				PostgresPackageId=$(PostgresPackageId);
				PostgresPackageVersion=$(PostgresPackageVersion);
				EntityFrameworkCorePackageVersion=$(EntityFrameworkCorePackageVersion);
				JsonNetPackageVersion=$(JsonNetPackageVersion);
				JsonPackageVersion=$(JsonPackageVersion);
				CSharpPackageVersion=$(CSharpPackageVersion);
				AsyncInterfacesPackageVersion=$(AsyncInterfacesPackageVersion);
				RepositoryUrl=$(RepositoryUrl);
				GitCommitId=$(GitCommitId);
				PackageIconFile=$(PackageIconFile);
				SourcePath=$(MSBuildProjectDirectory)\$(NuGetIntermediatePath);
				SourceFiles=$(MSBuildProjectDirectory)\$(NuGetIntermediatePath)**\*;
				IconPath=$(MSBuildProjectDirectory)\$(NuGetIntermediatePath)$(PackageIconFile)
			</NuspecProperties>
        </PropertyGroup>
    </Target>
</Project>